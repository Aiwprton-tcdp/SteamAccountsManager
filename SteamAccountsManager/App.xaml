<Application x:Class="SteamAccountsManager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <BooleanToVisibilityConverter x:Key="booleanToVisibility" />

        
        <Style TargetType="{x:Type Button}" x:Key="animated">
            <Style.Triggers>
                <EventTrigger RoutedEvent="UIElement.PreviewMouseLeftButtonDown">
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             From="1.0"
                                             To="0.0"
                                             Duration="0:0:0.07"
                                             AutoReverse="True" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Button}" x:Key="context" BasedOn="{StaticResource animated}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="MinHeight" Value="10" />
            <Setter Property="MinWidth" Value="50" />
            <Setter Property="Cursor" Value="Hand" />
            <Setter Property="TextElement.Foreground" Value="SlateGray" />
            <Setter Property="TextElement.FontWeight" Value="DemiBold" />
            <Setter Property="TextElement.FontStretch" Value="SemiExpanded" />
            <Setter Property="Typography.Kerning" Value="True" />
            <Setter Property="Typography.Capitals" Value="AllPetiteCaps" />
            <Setter Property="TextElement.FontSize" Value="13" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border TextBlock.Foreground="{TemplateBinding Foreground}"
                                    x:Name="Border"
                                    CornerRadius="10">
                            <ContentPresenter Margin="2"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RecognizesAccessKey="True" />
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Border" Property="Background" Value="Transparent" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="Button" x:Key="nav" BasedOn="{StaticResource context}">
            <Setter Property="TextElement.FontSize" Value="24" />
        </Style>

        <Style TargetType="{x:Type ListView}">
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="BorderThickness" Value="0"/>
        </Style>

        
        <Storyboard x:Key="progress" RepeatBehavior="Forever" SpeedRatio="1.5">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(ed:Arc.EndAngle)" Storyboard.TargetName="arc">
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="-10">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="-1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>


            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(ed:Arc.StartAngle)" Storyboard.TargetName="arc">
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="-360"/>
                <EasingDoubleKeyFrame KeyTime="0:0:2" Value="-11">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CircleEase EasingMode="EaseInOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        
        <Storyboard x:Key="rotate" RepeatBehavior="Forever">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[2].(RotateTransform.Angle)" Storyboard.TargetName="arc">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1.8" Value="360"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Application.Resources>
</Application>
